package cl.hccr.service.magneto;

import cl.hccr.service.magneto.domain.MutantRequest;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.services.sqs.model.SendMessageRequest;
import software.amazon.awssdk.services.sqs.model.SendMessageResponse;

import static org.assertj.core.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.BDDMockito.given;
import static org.springframework.boot.test.context.SpringBootTest.WebEnvironment.RANDOM_PORT;


@SpringBootTest(webEnvironment = RANDOM_PORT)
class IntegrationTest {

    @MockBean
    private SqsClient sqsClient;

    @Autowired
    private TestRestTemplate restTemplate;
    private final static String URL = "/mutant";
    private final static String [] MUTANT_DNA = {
            "ATGCGA",
            "CAGTGC",
            "TTATGT",
            "AGAAGG",
            "CCCCTA",
            "TCACTG"
    };

    private final static String [] NOT_MUTANT_DNA = {
            "ATGCGA",
            "CAGTGC",
            "TTATTT",
            "AGACGG",
            "GCGTCA",
            "TCACTG"
    };

    private final static String [] MALFORMED_DNA = {
            "ATGCGA",
            "CAGTGC",
            "TTATTT",
            "AGACG",
            "GCGTCA",
            "TCACTG"
    };

    private final static String [] NOT_ALLOEWD_CHAR_DNA = {
            "ATGCGA",
            "CAGTGC",
            "TTATTT",
            "AGARGT",
            "GCGTCA",
            "TCACTG"
    };

    @Test
    void sendRequest_returnIsMutant() {
        //arrange
        given(sqsClient.sendMessage(
                SendMessageRequest.builder().build()))
                .willReturn(SendMessageResponse.builder().build());

        MutantRequest mutant = new MutantRequest(MUTANT_DNA);
        HttpEntity<MutantRequest> request = new HttpEntity<>(mutant);

        //act
        ResponseEntity<Void> response = restTemplate.exchange(URL, HttpMethod.POST, request, Void.class);

        //assert
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);

    }

    @Test
    void sendRequest_returnIsNotMutant() {
        //arrange
        given(sqsClient.sendMessage(
                SendMessageRequest.builder().build()))
                .willReturn(SendMessageResponse.builder().build());

        MutantRequest mutant = new MutantRequest(NOT_MUTANT_DNA);
        HttpEntity<MutantRequest> request = new HttpEntity<>(mutant);

        //act
        ResponseEntity<Void> response = restTemplate.exchange(URL, HttpMethod.POST, request, Void.class);

        //assert
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.FORBIDDEN);

    }


    @Test
    void sendDnaMalformedRequest_ShouldThrowException() {
        //arrange
        MutantRequest mutant = new MutantRequest(MALFORMED_DNA);
        HttpEntity<MutantRequest> request = new HttpEntity<>(mutant);

        //act
        ResponseEntity<String> response = restTemplate.exchange(URL, HttpMethod.POST, request, String.class);

        //assert
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
    }


    @Test
    void sendDnaBigSizeRequest_ShouldThrowException() {
        //arrange
        MutantRequest mutant = new MutantRequest(BIG_SIZE_DNA);
        HttpEntity<MutantRequest> request = new HttpEntity<>(mutant);

        //act
        ResponseEntity<String> response = restTemplate.exchange(URL, HttpMethod.POST, request, String.class);

        //assert
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
    }


    @Test
    void sendDnaNotAllowedChar_ShouldThrowException() {
        //arrange
        given(sqsClient.sendMessage(
                SendMessageRequest.builder().build()))
                .willReturn(SendMessageResponse.builder().build());
        //arrange
        MutantRequest mutant = new MutantRequest(NOT_ALLOEWD_CHAR_DNA);
        HttpEntity<MutantRequest> request = new HttpEntity<>(mutant);

        //act
        ResponseEntity<String> response = restTemplate.exchange(URL, HttpMethod.POST, request, String.class);

        //assert
        assertThat(response.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
    }







    private final static String[] BIG_SIZE_DNA = {
            "AAACGTCAAGAGCACTACATATCGGTGTGTGAATGCTTAGATTCTCAGCACCATTCAAACTCCCGCACTAGCTGAGCCAATGGTACCCCGCTGACCACTG",
            "ATTCAATACGTATCCGAGCCCCATGGCCCTCTAGGGGACATTGTCAAAAGCAGCACTCATTCGCGGCAGTCGGTTTTGGCGTAACAGCGAGTGATAGAAC",
            "TCATTATAAGCCCATAAAGCTTCTAGACCGAAATCCCATTCAAACTATGCTGCTTGAGTCAAGCATAAGCACAAGATACTAACCTTCACAGACGATTGGG",
            "GTACGGGTCATCCCGGCCGTTTCACCTCAGCTTTAATGTTACCTCTCTCCAACGAGGTAATTTTAGCCCTGTCAACCGCATTTTACTCTAGTGGTACTCA",
            "CTATGCGGTCTTCCGATTCAGGACCTATATCGCGCACACTCGTGTGACCTGAAAGAGATATGTTCTACACGCGCAGTACCTAGTCTTAAATCGCCCGGAG",
            "CCACTACTATGGGAACTTCAAGCTCATCCTCGTTGTTCTATTCTATAGGTGCAAGGCTACCGATGGTACCGGGCTATCGATTTTATCTCTAAGCGTGGCC",
            "GTGGCCCGGGGAAGGGATGGAGGCCAGATACGCCCGAGCGTCAGCTCGGGCACCAAACGTTGGACCGACTACAGGATTGGCTCGAAACTGATTGGCGTAC",
            "GTACAGGAAAATGTCACTCATCAGCTAATATTCTAATACCAAAGCTGTGGCTACGCCTCGTCCAACCCTGGATGGGGCAAAAAGACGTCTAATTTGAGTA",
            "CCTCTGGTGATTCAATAGCCGTAAAGCTAGGTATGCAGGCGTCTGATACTTTGGTAATGCCCCTCCACGTGCTGGGAATAATCCGTCCCATGCAGTTGCA",
            "CTGCGGAAAGTGTCCGCCCATAATGCCTATAAAGCTATCCGGCCGAACGATTCTTACGGATCCCTGTGGAATTTGGTCTGTAAGGGTACAAACCCCTTTC",
            "TAATGGATATAGATTCTGCGAATACAGCGTAATGAAAGATTGCTATGCCTTGTGTTCTCGGCTAGCGAACTAATTAGTTCAACGAGGTGCATCTGGTAAA",
            "ACATAGACCTAGTTTGTCGGGAACGTAGCTGCAGCAGGCTCCCTACACAGTACAGAAGCTGTCTGTGGTCCACATGGGCCCTCGTGGTCGCGGGTTATAA",
            "GATTTGGGGCGCATACCCCACGTGTGCATCGCATACCTGAACGCGCGTTCCCGTTCAACTGCCCGAGCGTCGCTGTAGGGTCTTGGCGACAAGGTCCGGA",
            "CACGTATGTGGAGACAATGCCGCAGCTCACCACTGGACGCCGGGTTTGCGGCACAAAACAACCTTGTAGCGGGACGATCCCCCCAAGATCGTTATAGGAG",
            "GGTGGTATAGTATCGAGATCCTATTCCGGTTCGTCCAGCGTCCTGGCGCCGACGGATGATTCCTGTTTACGATGAATCTGGGGGTAATATTAGTCCCTAC",
            "AAGTAGAGAGTATCGCTCCGATCTACGCCGGAGAATGGGAAGTATACCTGGGGGTTAGTTCGATATCGGGTCGATCGACCGCCACGAGGGAGGCTATCCC",
            "ATACTACTTCGTGTAGTCTACAAGGGCTGGCCACGGCAGACCGAAACCGGAGCTGTATTAATCGGGTAGTATGTACAAGCATCCCTACCGCTTATAGGGG",
            "GACCCCAGATACGGCTACGGGTTTTAATTCGTTCGGAGTGCTGTTTAGATTTAGGATTAAATTGACCGGACCCACTAACGGCGAGTTCCAAAAGTTGTAA",
            "GAACGTTACCTAATCTAGATGACGAGCTCGAGTATGCTAATATCCGGCTGCAAGTAGGGCTGCAATAGCGGCGAACGGTGTAAGGCTTAATGGTTCAACG",
            "CATTGCTGAGTGCCGCAGAAACGCCGACCTTATTCGTGACCATCCTCAAGTCTGGCCAATATCTACATGATTGTCAACGTATTACCGATACCCGTCTGCG",
            "GTGTAGACAGGGTCCTCTTGTAAAAGTGCAATCGGGCATGTGGTGGTAAAAGGACTATCAAATCAAAGAGCTTCTCTTTATCCCGATCTGGCACACGGAT",
            "GACCATCACCTGATATACCTGCCGTTGATTGCGTGCGGGACCTTCGGGCGTCCAGAGAAACGGGCAAAAGGTACGGCCTGCAGCCCCACGATGGGCCTTT",
            "CCCAATAAACGGTATCTCGTAATCGCAGAAATCCCAGATCTCCACCGGTATTCACGTCCATTCTGAGCAGCAACTGCCGCTTGTCATCGCGTGTTTCTAT",
            "AGATAGACCTGAGATATAAGATTCTTCACACACTAGCTGGACACGAAGTTGAAACCGGAAACTAATCATTACCCATTCTCTGGAAAACCCCTCACAGTAC",
            "AGCGGTTTCCGATGCTACTGCAATAAGTGTTATTACTCTATCATGATCTGTAAAGGCCCGCTTGTCGAAATCTCAAGGAATGCAGGGTCACTCATCTATA",
            "CTATCAGCACTACATTCGACCGAGAAGACTGTTTAAGGTAGTTACGCCTAGATTTCTCCACCACAGTATCATCAGTGGCAGATCCCCTAGATTGGTTCCT",
            "ACAGTTTGAGGGAGTACCGGGATCTTCCCTGAGCGAGCCTTGCACCAGTCTGGATCCAAGCCGAGGGTTGTGGGCCGAGCTAGCATAGTTTGTAGGGTTT",
            "CACTTAAAGCGTACTGATACGATTATACCGGACCCCTGTCGTCGTAGTACCGAGGCATCTAGGTCCTGAGAAACAACGGGACTAACCTGCTGCGAAGTTG",
            "TCCTCCACCCGCAGTTTGTACCCTCACCAGTAGGGGTCCCACCTGTGCCCGGCTCTAAAACGTACCTGCAAATCGCAAGATGATTCGACGTTGCGACAAC",
            "GATGTCGACTAGCATTATCTATTGGATATATCATGTTTCTTATGCGGTAAGCCTCGGAGAAGGCCCTATTTTATCATTTTGGTATAATCCAAAGGCACCG",
            "CTTAGGTTTGAATGCTAACCAATGACGTCGCGTTCGCTCAGAAACGCCGCGGAATGCGGTATCTTCCTATACAACGCCGGGCAGAGTTTAGGGACCTTCC",
            "CTAGAATTTGCGTATCCCTACGACCGATACTGGCGCGCGTGGGCCCGCACTATACTTAAAAGTAGAAGCGATCGCTAGCCTGTTTTCTTTCCTAGGGCCA",
            "GGCAGAGTTCGTGCAGTACAGAGGTTAGCGTGTCGCATTTGTTGTCATTGTCATGGATCGGGTGTTGAGGGGTTGGGGTGTGTCTACCAACGGGGATTAC",
            "AAGTGCAGGCCGATCGCCTGGGTTGCCAGGTCGTTACATGTAGGCTAATACCCGTACAGCGGGGTTGCTGAAAGGTGGAGTCAGATGTTCAAACGAACGC",
            "AGCAGCGGCCGTGGACGCTTGCCCTACGCTCGAAATAACCCCCACGCCCTCGAGCAAAACTGAAGCATAGAGGTTAAAACGGTACCGCGCCACAGAGTGG",
            "ACGTGTATTCCGAGAGCTGCATACGAGACCTTCTACCTGTCCTAACTAGAGTCTGTTTCAATCCGTTGTAGCGGTTCACCGAACCACTCCCAATCTTCGA",
            "CCCCGTTCTACATGTTGGCCTGCTTCGTGGCCTGATTTGTGATAGTCTTGCACCCTACCCCAAATGGAGGTCACCGAAGCCCGCCTTTGCTCAGACGGCA",
            "ATCCCTTTGGTCTAGTTTCGGTGCGTCAGGAAATCCTGACACTTTCCGCACTTGTAGAAGTTGTCCGTGCCGTCGCAGAGTGTAGATGACCCCCTTGAAT",
            "TCCCGCACATCTCTCAAACTGGGGTTCGAGGGATAAAGCGTGGCTATACCCTAAGAACCAAGGTGCCCCCGAAGTAACGCAGCATAGTTTGCGTTCTTCG",
            "CCGGCCCCGACGTGAAGTGCGTGCGCGCGCGTGGGTTTTCCAACTTACGCTGTTTTATCGCAAACGCAGAAAGGTTCGCTAACACGGCCTGTCAAGCCGG",
            "CATTAATGTCTATACGCTTCGTATTATCCGAGTCAAACTAGGGGATCATCGAAATAATTGCCACTTAATATAGATCAGTACCTGCCAGCACTCGTTCCGT",
            "TTTTGATCCCCTTCCGCGAACAGCTAACGCATCCCATGAATCAATACAAAGCACGAATACGAAAGAACCACCCTAAAACCGTTCCCTTCGCTCCTACTAA",
            "GTCGCGTCGTCTCCCTCTTAACCTCAAATTTAGTACGTCACACCAAAGTGATATTTGTAAACGTTCACTCGGGTACACCACGTTGAAGTATATTAGCCCG",
            "AGGGTAGGGAACGGGTCCCTGAATTCGAGGTTTGATCCCGCCTTTCGGAGGAACATGGTAACAGGATATCCTAGAACAGCTTGGTCTTGGTGTCATGACT",
            "TTTCTGGTCCCGAGTAGATCTAAACCCGCGTCAGCTTCTGGCCCCTAAACTACCATTCGTCCAGGTTTTTTTGTGAGGGACTCCCCAGTATAGAGAGGCA",
            "TGAACTGGATGCGAACTACTGGTCCGACGCCCGCATCATATGAATGGACGAGACAAACGCAATTACTAACAGCGATAATAACTGCCAAGACAATAAACAC",
            "CCTCTCGCTGCTTCACGGTACGAAGTCCGACCGTCATGTCTGCAGAGAACGCACCATACGAATGTTCGGGACACTTGTAACATACTAATGTGACCTAAGC",
            "TAACTAAGGAAGACACGTCGAAGAGAGGGGTCATTCAGAGTGCAGGAACGTATGACGACCGTCCCGAAGAGCTGACGGTAGATCTCACAACGTTCGAGTT",
            "TTGCGGAACATTCGTACTTTCTGATTATACTCTCTCGATAAACTCGCCATCGGTGGCTGAAGCCAATATGTAACTGTTTATGGCGAATTCTTAAACAAAA",
            "GTCCATATCTTTAAGGTGCTGTCAGCGGCTATTCGATTGCCGTAGAAATCCTTAGCTTTGCGCGCAGTGATAAACATCTACGAGGCCACTAAACCAGCAG",
            "GTCGATGGAAGGAACTCGGCGTTTGAGTTCTATAGGATATTACGTGTCGAAGCGCGACGTCGCTGACAGCGGTACCCAAATCCCTAGTGCCTGAAGTACA",
            "GCTCCTAAAAGGGCTATGTTGTACTACCCTAGAGTGCCGTCGCGGCATTCGAAATGGCCCCGTAGCGAAAAATTCAGCCAACAAGGGAAAGCGTCGGAGG",
            "GATCTGAAGCAGACCGGGGGTCAGGAAACCCCCCATGCTGTTGTCGCGCTGGCGAGCATACTCGAAAACATTGTACAGTAATCGGCTTATGAAACCATAA",
            "TGTGAGGCGAGCCAAGATATTACCTTTAGTACAACTTTCTGAGATCTCCCCGACCTTTGAAACCGTTGACATGCACAAACATCGTGCTAGTTGTTATAGC",
            "GTCTTTGGGCTTCCTTCTGCGAGGTATGCGCTAAAAGTCTAAGGACTGTGCCCCGGGTGATTTGACCTACCCATTCGGGTGATAAGACACCCGCAAAACT",
            "GGATTAGTAGCGCTCACTGATTTAGCCAGGAAGCCCCAAGCCGTTCAACTCCCTTTAATGGTGCGATCGATGTCTCAAAAACCTAGAAGCCGGGAGCCCG",
            "CTCACCATCGTATAGAATTTGTGTAGTTCGGCGGTGTATGAAATTCACTGGGCGTAGCTTAACCCTCCACATTATTGTAAGCTCTGTCTACAGCACATAA",
            "TAGGTAAGAAACAGTCCCTTTAGACAGCGTGGCGACATCACCCGCCTCACTTCCGCACAAGTGGCACGGCTTGGTCAGCCCTTCGCATAGCAAAAGATAC",
            "AAGGTGCGGCGTTTACCCCAGAGCAGGTGGCCTGCGAATCCCTCGGAGTCTCCAAGTCCATTACCGGACTAAGTCGCGCCATTTGAACGCGTAAAAACCA",
            "CCGTGTCCGGGATAGTCATCGAGCTTTTCGCAGATGCACCCGACCTTGGCCAGCTAGAAAAGCGCCCGTGTTCGGGATCTCCTCCCCGCCAAGCCTTACC",
            "CAGCAGGTCCCGACTCAAGTGGCCCGTATACTTAGCGCTAGCAATTGACTTTACCCTTACCGGCTCCGTCGAATTTAGTATTGTATCGATCACAGAAGTC",
            "TTTTACCTCTTTCCTGTCACTTTTTTCCTGGCAGTGCGTCTTCGCAGAGGGTCTTCATTTCTGTCATGAACACGCTCACTCTGGATGCCTCCGCCCATGA",
            "TTTAGGAAGACGCGGATATCCGCAGCGACCGTTAACCGCTCGGGGCCGTCCTGGGGGAGTTGCACGAAATTCGAAGGGTGTCGTCAAGGTGATTATCGGC",
            "TTAGTCCGGAACAGGGAGCTGGCAATGAGCGACCGAGGTCTACAGGTGCCCAGTAAATCGTCGTGAAGGTTACGATTTTTAATAGAAGTATGCGACGTTC",
            "CGACATTCAAGTTGACATGCTGCCCATTATGCTTATATCATCTTCGATGTTGGATTTTTTCCTGATGCATGGTAGAGCGAATTCACGGGGACTCGTGGAT",
            "ACGGTCCACGATGTTCCTGTCGGCTAGGCATCGAAAGGAAACTGGATTGGGGGTGGTCTAGATTTGATCTAGAATGAGCCACCTAGGGCAGTTGGTAATG",
            "AACCAAATGTGAATCTCCCATACAGTAGGAAGTGGTGTGAGCAGTAGACACTATCCTACCCATCTATCCGTCCCTGCATCTGACCCTACGTTGGAGGGGT",
            "CGTTCATATTCGAGCAATATAACTGAGCCTGCGTTAAAGGGTCTCCTTATCTAAAACCTGCAGTACGATTAATTCAAGAATATATTTGCGTGTGCTAGTT",
            "CGCAGCTTCAACATATTCAGCGCGAATGGTGTTTTCCTTTTGCTGAATTTATCTCCGAGCCCGAGTTACGGTATTTGTCCCCTGCCTGACAATTTTGGAT",
            "TACTTGAATCGGCTCGAGCTGCGCCGTAAGGATTTGACCCTCCAAAGAGAGTTATTCGAGTTCATCGTGGTTTAAGGCATCTGTCTAGCTAGCCTCACTG",
            "GTTCCTGCACTGGCAATGGACTAGAGGTTCGCTCCGGTGAGTTGTCAGTTAGTCGAATCGTGCGGAACTATGAAATGAGCGCCAGAACCTTCTCATACGG",
            "ATTACGCAAGGGGCTTCAGGTATACTAGAACTTTAATTTGCATCCATAAATACCGTCCTTATTAGAAAGGGTCCTAACCCGGTCTGGACATCTGCTAGCA",
            "TAACGCCTCAACGTATGTTGCATGCGCACTAGTTGCCGTGGTGAATCTTGCACGGGTTGCTAGGTGAAAGACAAAGGGCGGACGGTCTTAATGCTACATC",
            "CCAATCGGCGTCCCGGTTTAAAGGCGGCCAATGCGCTTCACATATTACTATCCCACGGACCACACCTCCCCCCGCTCAACTATAGGCACAGTGGCTACAT",
            "GGTATGTCCAACGGTGTTAGGGTGAATCGCTAGGTACGGTCATCAACCGTAGCGATCGAGATGCTTAGAAAAAGCGAGACTCATGGTGAGGGACTCATCA",
            "CCAGGCTAATAACAGCGAGTGCTCTCCGGATGACACAAAACTGGTTCTTCAGACGCCCTAAACCTTCAATGTGGGTGATACAACAACACTCCCGGAGTCC",
            "GCTTCTAGAGTACGCGGCGGGGGTTTCCGCCCTTAGAAGGCGTTCCCGGGGTCTATAGTACGGAATCCAAGTGCATGTCGCTATAGTGATCCACATCGTT",
            "CTACTCCGTGGGAGTTTAACTCAATCATGGTCCGAACATGGGAGGTTTGTCGCTTAAACACTAACAGTTTCAGTAGAAGGCATATGTCCCCTCCGGCACT",
            "GCGCTCTCAGCTTTTTCCCCTATCTGACATAGATGTGTCACCCTCCTGCAGAGATGAGAAAGTCGCAACAACATCGCATCCCATACGGGTGATTGTGAGC",
            "TTCTAAGGCAAAGGCACTTTATATATTAGACGGGAGGCGAGATCGCGAAGCTGGAACGCGATGATCAACAGCCAAGGCTATATAATTAGTTGCCATCTAG",
            "ACAATCTCAGCGATAGTGGCATAGATCTTCGCAGGGTCTCAAAGATGGTCAACAAGGCATAACTCTTCCGGGGTGTCGGGACTGGGATATGCGTTACGCA",
            "TCTGTGTCGTCGAATGCTGTATTTATCGAGACCACGTATCATGCAATAACTAGAGTAGGTCGACGACGTTCGACGGACAACTGATGCTCGTAGAGTTCTA",
            "AATAACGAGGCGCGTATATATGCAAGCTGCCAACAACACGCCAAGACGGTTCGCGCAGTTGAGTAGGGCTGAACAGGCACCTTCCGAGGGACTTATGAAT",
            "AGATGTGATATGCTAGCATTTTCATAGAATATCAGTTTTAGGTCGACCACAAAAGAACAGAAGCCGAGCCTAGCGTGCGTTGTTCATACCCAGCTTACTT",
            "CCCACCACGATGCTTGGGGGGCAGCTTGTAGACTTGAAGAGCCAAACCCTCTCGACTCCCGCCTCGGGGTGGGTCTCAACGCGTTTTCTGGTTAGACGTG",
            "TTCAGTCACGGTATAGATTTTTGCACACTGACTAACTAACATGCGGGTAGGGGTCTTTTCCTCCACATATTCTGGCACACACGTGCTATTCATTCATCCA",
            "CTGGCAACATGCCAGCCCCTCCCTCTCGACGAGAATTTCTCGTCCCTCGCTGGCCAAGTTAAACTAGTGCTCTCCACCATTGAGTAGATGGAGAGAGCTC",
            "GTGCTCACTTACTGTGATTCCGATCCGGATTTAGCACACAGATTGCACAAGTGGTTCTGACATTACGTCTACTGCCGCCCTTGGCAATCCGTCTAACGAG",
            "CATCACCTAGCCTCCCGCGCAGAGCTCTCTATTAAAAACTATTGGCTCACAACCTCCCTGCGAGAGGGTGAGTTATGACACGAATTTAGCAACGTCTGTG",
            "CCAGAATTTATGGAATCTCCAACATAAAAACTAATGCTAGGCAAGACAATTGGATCGTTGCCTCCATCTACGCAGGCGACCGGGCTGGCGTCATATAGAT",
            "GATCAATGACTGAACCTTAAAACAAGCGAATAGTTTACCATAAAGACAGTGTGACCAGCCTCGTGATACATGGGAAGACATGATTACACGTGGCCATCAA",
            "TTGTTCGAATAGTTCCGTAAATTGACGTTCAAATGCGGTCTTTCGAGCACGATCTCTCAGGCGCCAGACCGCAGCTGTTCTAGTTAAGCTGTCTGGAATA",
            "GGGATATGAGAGAGATTACATATGCTTGTACGTTAAGCACCGCAAGAGTCGCTTCCATGACATCGACAAGAATTAATATATTGTATATGCCGCGGGCCTC",
            "CGGGCGCATGCTTCAAAACGACATTTCTACTAACAGGCTCGCTTATACAGATTCAGCCGCGTTCCTTTAGATGTATGGTCATTGGCCCTTGCATCTGGAT",
            "TGCGATAGTCAAGTCTCCGAAAGGAAGCTTGGGTGACGAAAACCGACAATCCGGGGAACTCTATTTCATCGGAGCAGGGCCGCGGTGGTGGTGGTGACGG",
            "GTACAACAAAACTGCCCAGTGTCGCACATCGCGGACGTTAGAAAACATTCTCAGGGAGCGCTGGCAGGAAGCAGCTCGTGCTCAAGTTAAGGAAACACAC",
            "TCTCAGTGAATATGAAGAAAGCTGCCGGACACACTTGACTACGGCCGTCTCGGTCATGCCGTTCCAACTCGTTGTTGCCGGACGCTTTCTTCGGCCCTCG",
            "CGCACTACGGCCATTTATGATTTTTGCCCCTCGCTAGGACCGTGATTCAATTTAGCTTGCTTGACCTGTTGGCTCATGATATCCAGTCGCAGGGACCCTG",
            "TGTCCAATGGTCATCGACAACAATTATTCGCGGGCCCTATAGAGCCGCGTGAACCTTCTGAGATGTCATTACCACCGGGGTCGCAATAACAGGGTGGGTA",
            "ACTAGGCACGAGGTTAGTTCCATTGATACTGGTGCTCAGCATGTACACCATGGCACCTGCCACCATCCAGAGCCGAGTAACCCAAGTTATATTGGTGACT"
    };


}